#!/bin/bash
#This file is an INCLUDE to pimpupdate. not to be run on its own under normal circumstances.
MCFLAGS="-O2 -w -march=native"
function doinstall.sgminer4 {
	if [ -e /root/minerbuild/sgminer ];
	then
	local BUILDDIR="/root/minerbuild/sgminer"
	SGMINERVER=`cd $BUILDDIR && git describe`
	echo "Preparing to build SGminer V $SGMINERVER"
	autoreconf -i
	cp /opt/ADL-SDK/adl_defines.h /root/minerbuild/sgminer/ADL_SDK/
	cp /opt/ADL-SDK/adl_sdk.h /root/minerbuild/sgminer/ADL_SDK/
	cp /opt/ADL-SDK/adl_structures.h /root/minerbuild/sgminer/ADL_SDK/
	CFLAGS="$MCFLAGS" ./configure
	if [ `make` ];
		then
		echo "Compile completed successfully."
		echo "Removing old minerbuild/sgminer.bak directory..."
		rm -rf /root/minerbuild/sgminer.bak
		echo "Backing up old sgminer to /root/minerbuild/sgminer.bak..."
		mv /opt/sgminer /root/minerbuild/sgminer.bak
		echo "Moving new sgminer into place..."
		cp -R /root/minerbuild/sgminer /opt
		echo "Build of Sgminer $SGMINERVER done."
		f.minestart
		else
		echo "make did not complete successfully, failing not so gracefully!"
		echo "BOOM!"
		exit 1
	fi 
	else
	echo "Can't find sgminer build directory, failing not so gracefully."
	echo "BOOM!"
	exit 1
	fi 
}
function doinstall.sgminer3() {
		if [ `git clone https://github.com/sgminer-dev/sgminer.git` ];
			then doinstall.sgminer4
		else "Error, git failed to clone the sgminer repo"
		exit 1
	fi
}
function doinstall.sgminer2 () {
	$THELINE
	f.minestop
	echo "Preparing work directory.... (/root/minerbuild)"
	if [ ! -e /root/minerbuild ];
	   	then
	   		echo "/root/minerbuild doesn't exist..creating.." 
			mkdir /root/minerbuild
		else
	    	echo "Found build directory, moving along..."
	    	$THELINE
	fi
	cd /root/minerbuild
	if [ -e /root/minerbuild/sgminer ];
		then
		echo "You already have a build directory for Sgminer "
		echo "1. Pull (Update your existing build directory)"
		echo "2. Clone (Remove existing build directory and clone fresh)"
		echo -n "Would you like to pull it up to date or clone a fresh version? (1/2): "
		read PULLORCLONESG
		if [ $PULLORCLONESG = 1 ];
			then 
			cd sgminer
			git pull
			doinstall.sgminer4
		elif [ $PULLORCLONESG = 2 ];
			then
			rm -rf sgminer
			doinstall.sgminer3
		else 
		   echo "Invalid selection, returning to miner build menu"
		   f.minermenu
		fi
		else 
		doinstall.sgminer3
	fi
}

function doinstall.sphsgminer() {
	echo "weeeee"
}
function minermenu.config() {
local PMSELECT_1="1. Cflags"
local PMSELECT_2="2. -O3"
local PMSELECT_3="3. -march=native"
local PMSELECT_4="4. Install updated seedmanager profiles"
local PMSELECT_5="5. Update miners using minermenu"
local PMSELECT_6="6. Install LSOC Kernel for R7850 /R9 270"
echo "What would you like to do?"
$THELINE
echo "Choose a build source"
echo $PMSELECT_1
echo "Save git trees for miners built?"
echo $PMSELECT_2
$THELINE
echo "Git build options" 
echo $PMSELECT_3
echo $PMSELECT_4
echo $PMSELECT_5
echo $PMSELECT_6
echo "or q to exit"
echo -n "Which one? 1-6: "
	read PMSELECTNUM
	if [ $PMSELECTNUM == q ];
		then exit 0
	else
	case $PMSELECTNUM in
		1 )
		doinstall.version
		;;
		2 )
		doinstall.pmprofiles
		;;
		3 )
		doinstall.seedmanager
		;;
		4 )
		doinstall.smprofiles
		;;
		5 ) 
		clear
		f.minermenu
		;;
		* )
		echo "Invalid Selection,"
		echo "Returning to menu"
		pimpmenu
		;;
	esac	
fi
}
function f.minermenu() {
$THELINE
echo "			Miner build menu"
$THELINE
local MSELECT_1="1. Update Sgminer (Scrypt/Scrypt-N)"
local MSELECT_2="2. Update sph-sgminer (Many algos)"
local MSELECT_3="3. Update cgminer_heavy (Heavy, Hefty, Sha3(Keccak), Skein, Scrypt)"
local MSELECT_4="4. Update yacminer (Chacha, scrypt)"
local MSELECT_5="5. Update BFGminer (ASIC, Gridseeds, scrypt)"
local MSELECT_6="6. Update Cgminer-3.7.2 (Ckolivas)"
local MSELECT_7="7. Update Cgminer-3.7.2-Kalroth"
local MSELECT_8="8. Update Cgminer-4.3.0-Gridseed (ASIC/Gridseed ONLY)"
local MSELECT_9="9. Update sgminer-jackpot (Jackpotcoin / ADV Sha3)"
echo "What would you like to do?"
echo "Only sgminer/sph-sgminer is finished currently sorry :( "
echo $MSELECT_1
echo $MSELECT_2 
#echo $MSELECT_3
#echo $MSELECT_4
#echo $MSELECT_5
#echo $MSELECT_6
#echo $MSELECT_7
#echo $MSELECT_8
#echo $MSELECT_9
#echo $MSELECT_10
echo "or q to exit"
echo -n "Which one? 1-9: "
	read MINERSELECTNUM
	if [ $MINERSELECTNUM == q ];
		then exit 0
	else
	echo -n "You selected $MSELECT_$MINERSELECTNUM Correct? Y/N: "
	read MINERSELECT_CONTINUE
	if [ $MINERSELECT_CONTINUE == y ];
	then 
	case $MINERSELECTNUM in
		1 )
		doinstall.sgminer2
		;;
		2 )
		doinstall.sphsgminer
		;;
		3 )
		doinstall.cgminer_heavy
		;;
		4 )
		doinstall.yacminer
		;;
		5 )
		doinstall.bfgminersrc
		;;
		6 )
		doinstall.cgminer
		;;
		7 )
		doinstall.kalroth
		;;
		8 )
		doinstall.dmaxl-cgminer
		;;
		9 )
		doinstall.sgminer-jackpot
		;;
	  esac
	else
	$THELINE
	echo "Invalid Selection,"
	echo "Returning to menu"
	f.minermenu
	fi
fi
}
#doinstall.sgminer